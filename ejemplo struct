#include <iostream>
#include <vector>

using namespace std;

struct ReservaCama {
    int numeroCama;
    bool reservada;
    string pacienteNombre;

    ReservaCama(int numero) : numeroCama(numero), reservada(false), pacienteNombre("") {}
};

vector<ReservaCama> camasDisponibles = {
    ReservaCama(1),
    ReservaCama(2),
    ReservaCama(3),
    ReservaCama(4)
};

void mostrarCamasDisponibles() {
    cout << "Camas disponibles:" << endl;
    for (const auto& cama : camasDisponibles) {
        if (!cama.reservada) {
            cout << "Cama #" << cama.numeroCama << " está libre" << endl;
        }
    }
}

void reservarCama(int numeroCama, const string& pacienteNombre) {
    for (auto& cama : camasDisponibles) {
        if (cama.numeroCama == numeroCama && !cama.reservada) {
            cama.reservada = true;
            cama.pacienteNombre = pacienteNombre;
            cout << "Se ha reservado la cama #" << numeroCama << " para " << pacienteNombre << endl;
            return;
        }
    }
    cout << "La cama #" << numeroCama << " no está disponible o no existe." << endl;
}

void liberarCama(int numeroCama) {
    for (auto& cama : camasDisponibles) {
        if (cama.numeroCama == numeroCama && cama.reservada) {
            cama.reservada = false;
            cama.pacienteNombre = "";
            cout << "Se ha liberado la cama #" << numeroCama << endl;
            return;
        }
    }
    cout << "La cama #" << numeroCama << " no está reservada o no existe." << endl;
}

int main() {
    int opcion;
    do {
        cout << "Bienvenido a la recepcion del hospital" << endl;
        cout << "1. Mostrar camas disponibles" << endl;
        cout << "2. Reservar cama" << endl;
        cout << "3. Liberar cama" << endl;
        cout << "4. Salir" << endl;
        cout << "Ingrese una opcion: ";
        cin >> opcion;

        switch(opcion) {
            case 1:
                mostrarCamasDisponibles();
                break;
            case 2: {
                int numeroCama;
                string pacienteNombre;
                cout << "Ingrese el número de cama a reservar: ";
                cin >> numeroCama;
                cout << "Ingrese el nombre del paciente: ";
                cin.ignore(); // Limpiar el buffer de entrada
                getline(cin, pacienteNombre);
                reservarCama(numeroCama, pacienteNombre);
                break;
            }
            case 3: {
                int numeroCama;
                cout << "Ingrese el número de cama a liberar: ";
                cin >> numeroCama;
                liberarCama(numeroCama);
                break;
            }
            case 4:
                cout << "Saliendo del programa." << endl;
                break;
            default:
                cout << "Opción no válida. Intente de nuevo." << endl;
        }

        cout << endl;
    } while(opcion != 4);

    return 0;
}
